<?php
/**
 * Create a new post.
 *
 * femto blog system.
 *
 * @author Eduard Dopler <contact@eduard-dopler.de>
 * @version 0.1
 * @license Apache License 2.0 http://www.apache.org/licenses/LICENSE-2.0.txt
 */


session_start();
require '../functions.php';
require 'adm_functions.php';

// initialize localization
initLocale();


// 403?
if (!isset($_SESSION['username'])) {
    print403();
    die();
}
// logged in

// database (with admin privileges)
$db = dbConnect(true);

printHeaderAdm(true, _('post'));

// SQL statement
try {
    // get authors
    // admins/mods get authors from database
    if ($_SESSION['accessLevel'] <= 2) {
        $queryAuthors = (
            "SELECT authorid, longname"
         . " FROM FemtoAuthor");
        $authors = $db->query($queryAuthors)->fetchAll(PDO::FETCH_ASSOC);
    // authors see only themselves
    } else {
        $authors = array(array(
            'authorid' => $_SESSION['authorId'],
            'longname' => $_SESSION['longname']));
    }

    // get posts for langReference
    $queryPosts = (
        "SELECT postid, lang, title"
     . " FROM FemtoPost"
     . " ORDER BY created DESC");
    $posts = $db->query($queryPosts)->fetchAll(PDO::FETCH_ASSOC);

} catch (PDOException $e) {
    dbError(__FUNCTION__, $e);
}

// if _POST data available, insert all its values, else use placeholders
$now = date("Y-m-d H:i:s");
$lang = (empty($_POST['lang'])) ? null : $_POST['lang'];
$visibility = (empty($_POST['visibility'])) ? 'draft' : $_POST['visibility'];
$created = (empty($_POST['created'])) ? $now : $_POST['created'];
$modified = (empty($_POST['modified'])) ? $now : $_POST['modified'];
$title = (empty($_POST['title'])) ? null : $_POST['title'];
$urlTitle = (empty($_POST['urlTitle'])) ? null : $_POST['urlTitle'];
$authorId = (empty($_POST['authorId'])) ? $_SESSION['authorId'] . '' : $_POST['authorId'];
$langReference = (empty($_POST['langReference'])) ? null : $_POST['langReference'];
$comVisibility = (empty($_POST['comVisibility'])) ? 'visible' : $_POST['comVisibility'];
$content = (empty($_POST['content'])) ? "<h4></h4>\n<p></p>" : $_POST['content'];
// postId is always auto-generated by the database
$postId = '(auto)';

// if form submitted, do INSERT
if (!empty($_POST['postCreate'])) {
    // SQL statement
    try {
        // insert
        $query = (
            "INSERT INTO FemtoPost"
         . "   (visibility, created, title, urltitle, content, authorid, lang, langreference, modified, comvisibility)"
         . " VALUES"
         . "   (:visibility, :created, :title, :urltitle, :content, :authorid, :lang, :langreference, :modified, :comvisibility)");
        $param = array(
            ':visibility' => $visibility,
            ':created' => $created,
            ':title' => escapeField($title),
            ':urltitle' => escapeField($urlTitle),
            ':content' => str_replace("\r", '', $content),
            ':authorid' => $authorId,
            ':lang' => $lang,
            'langreference' => $langReference,
            ':modified' => $modified,
            ':comvisibility' => $comVisibility);
        $stmt = $db->prepare($query);
        $stmt->execute($param);

        if ($stmt->rowCount() > 0) {
            // get the postId we just inserted
            //  PostgreSQL requires the sequence name, MySQL does not
            $seq = (DBDRIVER === 'pgsql') ? 'femtopost_postid_seq' : null;
            $postId = $db->lastInsertId($seq);

            echo "    <h4>" . _('post_inserted') . "</h4>\n";
            // print link to new post, if visible
            if ($visibility === 'posted') {
                $linkPost = sprintf('/%s/%s/%s/',
                    $lang, $postId, $urlTitle);
                printf('    <p><a href="%s">%s</a></p>' . "\n",
                    $linkPost, _('post_inserted_view_here'));
                // show hint for updating feed/sitemap.xml
                printf('    <p class="hint"><a href="adm_update_feedsitemap.php" title="%s">%s</a>' . "\n",
                    _('update_feed_sitemap_desc'), _('update_feed_sitemap'));
            } else {
                echo '    ' . _('post_inserted_not_public') . "\n";
            }
            
        } else {
            // error
            echo "    <h4>" . _('post_not_inserted') . "</h4>\n";
            echo "    <h4>" . _('db_error_on_write') . "</h4>\n";
        }

    } catch (PDOException $e) {
        dbError(__FUNCTION__, $e);
    }
} else {
    // not submitted, print form
?>
    <h4><?= _('new_post') ?></h4>
    <hr>
    <form action="adm_post_new.php" method="post">
      <input type="text" name="postId" maxlength="10" value="<?= $postId ?>" title="<?= _('do_not_change_autovalue') ?>" disabled><span class="description"><?= _('field_postid') ?></span><br>
      <input type="text" name="lang" maxlength="2" value="<?= $lang ?>" placeholder="<?= $lang ?>" tabindex="1" required><span class="description"><?= _('field_language') ?></span><br>
      <select name="visibility" size="1" tabindex="2">
        <option value="posted"<?php if ($visibility === 'posted') echo ' selected' ?>><?= _('posted') ?></option>
        <option value="hidden"<?php if ($visibility === 'hidden') echo ' selected' ?>><?= _('hidden') ?></option>
        <option value="draft"<?php if ($visibility === 'draft') echo ' selected' ?>><?= _('draft') ?></option>
      </select><span class="description"><?= _('field_visibility') ?></span><br>
      <input type="text" name="created" maxlength="25" value="<?= $created ?>" placeholder="<?= $created ?>" title="YYYY-MM-DD HH:MM:SS" tabindex="3"><span class="description"><?= _('field_created') ?> <a href="javascript:void(0);" title="<?= _('now_desc') ?>" onclick="return getNow('created')">(<?= _('now') ?>)</a></span><br>
      <input type="text" name="modified" maxlength="25" value="<?= $modified ?>" placeholder="<?= $modified ?>" title="YYYY-MM-DD HH:MM:SS" tabindex="4"><span class="description"><?= _('field_modified') ?> <a href="javascript:void(0);" title="<?= _('now_desc') ?>" onclick="return getNow('modified')">(<?= _('now') ?>)</a></span><br>
      <input type="text" name="title" value="<?= $title ?>" placeholder="<?= $title ?>" tabindex="5" onblur="generateUrlTitle(false)" required><span class="description"><?= _('field_title') ?></span><br>
      <input type="text" name="urlTitle" maxlength="100" value="<?= $urlTitle ?>" placeholder="<?= $urlTitle ?>" tabindex="6" required><span class="description"><?= _('field_urltitle') ?> <a href="javascript:void(0);" title="<?= _('from_title_desc') ?>" onclick="return generateUrlTitle(true)">(<?= _('from_title') ?>)</a></span><br>
      <select name="authorId" size="1" tabindex="7">
<?php
        foreach ($authors as $author) {
?>
        <option value="<?= $author['authorid'] ?>"<?php if ($author['authorid'] === $authorId) echo ' selected' ?>>#<?= $author['authorid'] . ' ' . $author['longname'] ?></option>
<?php
        }
?>
      </select><span class="description"><?= _('field_authorid') ?></span><br>
      <select name="langReference" size="1" tabindex="8">
        <option value="0"><?= _('none') ?></option>
<?php
        foreach ($posts as $post) {
?>
        <option value="<?= $post['postid'] ?>"<?php if ($post['postid'] === $langReference) echo ' selected' ?>>#<?= $post['postid'] . ' (' . $post['lang'] . ') ' . $post['title'] ?></option>
<?php
        }
?>
      </select><span class="description"><?= _('field_langreference') ?></span><br>
      <select name="comVisibility" size="1" tabindex="9">
        <option value="visible"<?php if ($comVisibility === 'visible') echo ' selected' ?>><?= _('visible') ?></option>
        <option value="hidden"<?php if ($comVisibility === 'hidden') echo ' selected' ?>><?= _('hidden') ?></option>
        <option value="closed"<?php if ($comVisibility === 'closed') echo ' selected' ?>><?= _('closed') ?></option>
      </select><span class="description"><?= _('field_comvisibility') ?></span><br>
      <textarea name="content" tabindex="10" onkeypress="window.confirmLeave=true" required><?= $content ?></textarea><span class="description"><?= _('field_content') ?></span><br>
<?php
        printTextTools();
?>
      <hr>
      <input id="previewbutton" type="button" name="postPreview" value="<?= _('preview') ?>" tabindex="11" onclick="showPreview()">
      <input type="submit" name="postCreate" value="<?= _('create') ?>" tabindex="12" onclick="window.confirmLeave=false">
    </form>
  </article>
  <hr>
  <article id="previewarea">
<?php
}


$db = null;
printFooterAdm();

?>
